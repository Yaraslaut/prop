name : Build

on:
  push:
    paths-ignore:
      - 'docs/**'
      - '.github/ISSUE_TEMPLATE/**'
      - '.github/*.yml'
      - 'LICENSE.txt'
      - '*.md'
      - '*.sh'
    branches:
        - master

        - edge
  pull_request:
    branches:
      - master
      - edge

jobs:
  ubuntu_2204_cc_matrix_no_cuda:
    strategy:
      fail-fast: false
      matrix:
        cxx: [20]
        build_type: ["Release", "Debug"]
    name: "Ubuntu 22.04 (C++${{ matrix.cxx }}, ${{matrix.build_type}})"
    runs-on: ubuntu-22.04
    outputs:
      id: "${{ matrix.compiler }} (C++${{ matrix.cxx }}, ${{ matrix.build_type }})"
    steps:
      - uses: actions/checkout@v3
      - name: ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: "ccache-ubuntu2204_no_cuda-${{ matrix.cxx }}-${{ matrix.build_type }}"
          max-size: 256M
      - name: "update APT database"
        run: sudo apt -q update
      - name: Install clang
        run: |
            wget https://apt.llvm.org/llvm.sh
            chmod +x llvm.sh
            sudo ./llvm.sh all
      - name: Check clang version
        run: clang++ --version
      - name: "Download dependencies"
        run: sudo apt install cmake ninja-build
      - name: "Cmake configure"
        run:  cmake --preset=prop-actions -S . -DCMAKE_CXX_COMPILER=clang++  -DCMAKE_CXX_STANDARD=${{ matrix.cxx }} -DCMAKE_BUILD_TYPE=${{matrix.build_type}}
      - name: "build "
        run: cmake --build build/  --target "pyprop;prop_test" -- -j3


  ubuntu_2204_cc_matrix_cuda:
    strategy:
      fail-fast: false
      matrix:
        cxx: [20]
        build_type: ["Debug", "Release"]
    name: "Ubuntu 22.04 CUDA (C++${{ matrix.cxx }}, ${{matrix.build_type}})"
    runs-on: ubuntu-22.04
    outputs:
      id: "(C++${{ matrix.cxx }}, ${{ matrix.build_type }})"
    steps:
      - uses: actions/checkout@v3
      - name: ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: "ccache-ubuntu2204_cuda-${{ matrix.compiler }}-${{ matrix.cxx }}-${{ matrix.build_type }}"
          max-size: 256M
      - uses: Jimver/cuda-toolkit@v0.2.10
        id: cuda-toolkit
        with:
          cuda: '12.1.0'
      - name: "update APT database"
        run: sudo apt -q update
      - name: Install clang
        run: |
            wget https://apt.llvm.org/llvm.sh
            chmod +x llvm.sh
            sudo ./llvm.sh all

      - name: "Download dependencies"
        run: sudo apt install cmake ninja-build
      - name: "Cmake configure"
        run:  cmake --preset=prop-cuda-actions -S . -DCMAKE_CXX_COMPILER=clang++  -DCMAKE_CXX_STANDARD=${{ matrix.cxx }} -DCMAKE_BUILD_TYPE=${{matrix.build_type}}
      - name: "build "
        run: cmake --build build/  --target "pyprop" -- -j3
